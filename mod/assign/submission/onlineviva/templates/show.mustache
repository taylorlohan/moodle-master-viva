<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>MediaCapture and Streams API</title>
    <meta name="viewport" content="width=device-width">
    <style type="text/css">
        [data-role="recordings"] > .row > a {
            display: inline-block;
            text-align: center;
            font-size: 20px;
            line-height: 50px;
            vertical-align: middle;
            width: 50px;
            height: 50px;
            border-radius: 20px;
            color: #fff;
            font-weight: bold;
            text-decoration: underline;
            background-color: #0093E9;
            background-image: -webkit-gradient(linear, left bottom, left top, from(#0093E9), to(#80D0C7));
            background-image: -o-linear-gradient(bottom, #0093E9 0%, #80D0C7 100%);
            background-image: linear-gradient(0deg, #0093E9 0%, #80D0C7 100%);
            float: right;
            margin-left: 20px;
            cursor: pointer;
        }

      .button-style {
            display: inline-block;
            outline: none;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            font: 14px/100% Arial, Helvetica, sans-serif;
            padding: .5em 2em .55em;
            text-shadow: 0 1px 1px rgba(0,0,0,.3);
            -webkit-border-radius: .5em;
            -moz-border-radius: .5em;
            border-radius: .5em;
            -webkit-box-shadow: 0 1px 2px rgba(0,0,0,.2);
            -moz-box-shadow: 0 1px 2px rgba(0,0,0,.2);
            box-shadow: 0 1px 2px rgba(0,0,0,.2);

        }

        /*.bar {
            width: 320px;
            height: 50px;
            margin: 1px;
            display: inline-block;
            position: relative;
            background-color: #aeaeae;
            vertical-align: baseline;
            text-align: center;
            border-radius: 20px;
        }*/

        </style>
</head>
<body>
<header>
    <h1>Online Viva</h1>

</header>

    <!-- <video controls id="vidcon"></video> -->
<script type="text/javascript" src="https://code.jquery.com/jquery.min.js"></script>
<script>
    var canvas=document.getElementById('canvas');
    let chunks = [];
    var width = 320;
    var height = 0;
    let c = 10;
    //let recorder;
    //let t;
    let photo = document.getElementById('photo');
    var options = {audio: true, video: {
            facingMode: "user",
            width: { min: 640, ideal: 1280, max: 1280 },
            height: { min: 480, ideal: 720, max: 720 }
        }};
    init();

    function init() {
        const ctx = canvas.getContext('2d');
        ctx.fillStyle = 'white';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        navigator.mediaDevices.getUserMedia(options)
                .then(function(mediaStream) {
                    var srcvideo = document.getElementById("srcvideo")
                    srcvideo.srcObject = mediaStream;
                    srcvideo.play();
                    //playCanvas(srcvideo, ctx)
                });

        setRecorder();
        setFormatSelect('video/webm;codecs=vp9');
    }

    let audio = document.getElementById('aud');
    //let mediaRecorder = new MediaRecorder(mediaStreamObj);


    function setFormatSelect(format){
        if(!MediaRecorder.isTypeSupported(format)){
            alert(format);
            alert("当前浏览器不支持该编码类型");
            return;
        }
        chunks = [];
        setRecorder(format);
    }

    function setRecorder(format) {
        let start = document.getElementById('btnstart');
        let stop = document.getElementById('btnstart');
        const stream = canvas.captureStream(60); // 60 FPS recording
        const recorder = new MediaRecorder(stream, {
            mimeType: format
        });
        recorder.ondataavailable = e => {
            chunks.push(
                    e.data
            );
        };

        start.disabled = false;
        start.onclick = e => {
            recorder.start(10);
            start.disabled = true;
            stop.disabled = false;
        };
        stop.onclick = e => {
            recorder.stop();
            blobDownload(format);
            start.disabled = false;
            stop.disabled = true;
        };


    }

    function blobDownload(format) {
        const link = document.createElement('a');
        link.style.display = 'none';
        const fullBlob = new Blob(chunks);
        const downloadUrl = window.URL.createObjectURL(fullBlob);
        link.href = downloadUrl;
        link.download = 'media - '+format+'.mp4';
        document.body.appendChild(link);
        link.click();
        link.remove();
    }
</script>

<div class="holder">

        <canvas id="canvas"></canvas>

        <div class="output">
            <img id="photo" alt="The screen capture will appear in this box.">
        </div>
    <video id="srcvideo" data-role="recordings">Video stream not available.</video>

    <div data-role="controls">
        <p><button id="btnstart" class="button-style">START RECORDING</button><br/>
            <button id="btnstop" class="button-style">STOP RECORDING</button>
            <p class="count"></p></p>
    </div>

    <div data-role="recordings">
    <div class="row">
        <audio id="aud" controls></audio>
        <a>&#9660;</a>
    </div>
    </div>

</div>
</body>
</html>